{"version":3,"sources":["helpers/hooks/useObserver.ts","components/UsersList/UserItem/UserItem.module.scss","components/UsersList/UsersList.module.scss","components/UsersList/UserItem/UserItem.tsx","components/UsersList/UsersList.tsx","components/Friends/Friends.tsx","components/Friends/FriendsContainer.tsx"],"names":["useObserver","isFetching","isEndList","callBack","observer","useRef","element","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","module","exports","UserItem","user","isFollowing","toggleFollowOnUser","createDialog","navigation","useNavigate","userName","makeFirstLetterUppercase","name","handleWritingMessage","id","className","cl","userItem","Avatar","photo","photos","small","photoPlaceholder","userId","infoColumn","to","userStatus","status","reduceLine","onClick","newMessageBtn","MyButton","disabled","some","i","followed","children","UsersList","usersList","isSubscribePending","map","Friends","usersData","searchInput","isUsersFetching","maxPageItemsCount","fetchUsers","items","totalItemsCount","length","bind","observedElement","Preloader","width","height","position","style","ref","mapDispatchToProps","toggleFollowOnUserThunk","createDialogThunk","fetchFriendsThunk","fetchSearchedFriendsThunk","clearSearchedUsersState","clearUsersState","connector","connect","state","usersPage","users","friends","currentPage","searchedUsersPage","searchedUsers","searchedUsersList","requests","toggleFollowOnUserPending","fetchUsersPending","compose","useOutletContext","window","scrollBy","behavior","top"],"mappings":"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","file":"static/js/4.8dc40d02.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\"\n\ntype UseObserverType = (\n  isFetching: boolean,\n  isEndList: boolean,\n  callBack: () => Promise<void>,\n  // element: HTMLDivElement\n) => void\n\nconst useObserver: UseObserverType = (isFetching, isEndList, callBack) => {\n  const observer = useRef<IntersectionObserver | null>(null)\n  const element = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n     if (isFetching) return\n     if (!element) return\n     if (observer.current) observer.current.disconnect()\n\n     const cb = (entries: IntersectionObserverEntry[]): void => {\n       entries[0].isIntersecting \n       && !isEndList\n       && !isFetching\n       && callBack()\n     }\n     \n     observer.current = new IntersectionObserver(cb)\n     observer.current.observe(element.current!)\n   }, [isFetching, element, callBack, isEndList])\n\n   return element\n}\n\nexport default useObserver\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"UserItem_userItem__3mGVj\",\"infoColumn\":\"UserItem_infoColumn__10dNY\",\"userName\":\"UserItem_userName__3z7mB\",\"userStatus\":\"UserItem_userStatus__3iMXw\",\"newMessageBtn\":\"UserItem_newMessageBtn__1mfCA\",\"userPhoto\":\"UserItem_userPhoto__2AdjR\",\"btnContainer\":\"UserItem_btnContainer__298Wa\",\"unfollowBtn\":\"UserItem_unfollowBtn__1hE1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersSection\":\"UsersList_usersSection__21yXH\",\"title\":\"UsersList_title__1n9mR\",\"usersList\":\"UsersList_usersList__2FCmk\",\"preloaderContainer\":\"UsersList_preloaderContainer__3QeBb\",\"pagination\":\"UsersList_pagination__2DsNo\",\"paginationContainer\":\"UsersList_paginationContainer__2sMGg\",\"paginationItem\":\"UsersList_paginationItem__3aLNY\",\"active\":\"UsersList_active__1suvb\",\"paginationSlider\":\"UsersList_paginationSlider__R8DCx\"};","import { useNavigate } from 'react-router-dom'\nimport { makeFirstLetterUppercase, reduceLine } from '../../../helpers/helpers'\nimport photoPlaceholder from '../../../assets/images/jpeg/no-photo.jpg'\nimport { IUser } from '../../../redux/users/types'\nimport cl from './UserItem.module.scss'\nimport { Link } from 'react-router-dom'\nimport MyButton from '../../common/MyButton/MyButton'\nimport Avatar from '../../Avatar/Avatar'\n\n/* ------------- Types ------------- */\ninterface UserItemProps {\n  user: IUser\n  isFollowing: number[]\n  toggleFollowOnUser: (userId: number, followed: boolean) => void\n  createDialog: (userId: number) => void\n}\n\n/* ------------- Component ------------- */\nexport const UserItem:React.FC<UserItemProps> = ({ \n  user,\n  isFollowing,\n  toggleFollowOnUser,\n  createDialog,\n}) => {\n const navigation = useNavigate()\n const userName = makeFirstLetterUppercase(user.name)\n\n const handleWritingMessage = async () => {\n   await createDialog(user.id)\n   navigation(`/messenger/${user.id}`)\n }\n\n return (\n   <div className={cl.userItem}>\n     <Avatar photo={user.photos.small || photoPlaceholder} userId={user.id} />\n     <div className={cl.infoColumn}>\n       <Link to={`/profile/${user.id}`}>\n         <div className={cl.userName}>{userName}</div>\n       </Link>\n       <div className={cl.userStatus}>\n         {(user.status ? reduceLine(user.status, 40) : null) || `${userName} has no status`}\n       </div>\n         <div onClick={handleWritingMessage} className={cl.newMessageBtn}>Write message</div>\n     </div>\n     <MyButton\n       disabled={isFollowing.some((i) => i === user.id)}\n       callBack={() => toggleFollowOnUser(user.id, user.followed)}\n       children={user.followed ? 'Unfollow' : 'Follow'}\n     />\n   </div>\n )\n}\n\nexport default UserItem","import { IUser } from '../../redux/users/types'\nimport UserItem from './UserItem/UserItem'\nimport cl from './UsersList.module.scss'\n\n/* ------------- Types ------------- */\ninterface UsersListProps {\n  usersList: IUser[]\n  isSubscribePending: number[]\n  toggleFollowOnUser: (userId: number, followed: boolean) => void\n  createDialog: (userId: number) => void\n}\n\n/* ------------- Component ------------- */\nconst UsersList: React.FC<UsersListProps> = ({\n  usersList,\n  createDialog,\n  isSubscribePending,\n  toggleFollowOnUser,\n}) => {  \n  return (\n    <>\n      <div className={cl.usersList}>\n        {usersList.map(user => (\n          <UserItem\n            key={user.id}\n            user={user}\n            isFollowing={isSubscribePending}\n            toggleFollowOnUser={toggleFollowOnUser}\n            createDialog={createDialog}\n          />\n          ))}\n      </div>\n    </>\n  )\n}\n\nexport default UsersList\n","import useObserver from '../../helpers/hooks/useObserver'\nimport { IUser } from '../../redux/users/types'\nimport Preloader from '../common/Preloader/Preloader'\nimport UsersList from '../UsersList/UsersList'\n\n/* ------------- Types ------------- */\ninterface FriendsProps {\n  usersData: { items: IUser[], totalItemsCount: number, currentPage: number }\n  isSubscribePending: number[]\n  isUsersFetching: boolean\n  maxPageItemsCount: number\n  searchInput: string\n  fetchUsers: (maxPageItemsCount: number, term: string, friend: boolean) => Promise<void>\n  toggleFollowOnUser: (userId: number, followed: boolean) => void\n  createDialog: (userId: number) => void\n}\n\n/* ------------- Component ------------- */\nconst Friends: React.FC<FriendsProps> = ({\n  usersData,\n  searchInput,\n  isSubscribePending,\n  isUsersFetching,\n  toggleFollowOnUser,\n  createDialog,\n  maxPageItemsCount,\n  fetchUsers\n}) => {\n  const { items, totalItemsCount } = usersData\n  const isEndList = totalItemsCount === usersData.items.length\n  const callBack = fetchUsers.bind(null, maxPageItemsCount, searchInput, true)\n  const observedElement = useObserver(isUsersFetching, isEndList, callBack)\n\n  return (\n    <>\n      <UsersList\n        usersList={items}\n        isSubscribePending={isSubscribePending}\n        toggleFollowOnUser={toggleFollowOnUser}\n        createDialog={createDialog}\n      />\n      {isUsersFetching \n        ? (<Preloader width=\"50px\" height=\"50px\" position=\"absolute\" />) \n        : (<div style={{height: '1px'}} ref={observedElement!} />)\n      }\n    </>\n  )\n}\n\nexport default Friends","import { connect, ConnectedProps } from \"react-redux\"\nimport { compose } from \"redux\"\nimport { RootState } from \"../../redux/store\"\nimport Friends from \"./Friends\"\nimport { createDialogThunk } from \"../../redux/messenger/thunks\"\nimport { toggleFollowOnUserThunk, fetchFriendsThunk, fetchSearchedFriendsThunk } from '../../redux/users/thunks'\nimport { clearUsersState } from \"../../redux/users/actions\"\nimport { useOutletContext } from \"react-router-dom\"\nimport { PeoplePageContextProps } from \"../../pages/PeoplePage/PeoplePage\"\nimport { useEffect } from \"react\"\n\n/* ------------- Component ------------- */\nconst FriendsContainer: React.FC<FriendsContainerProps> = ({\n  usersList,\n  searchedUsersList,\n  isSubscribePending,\n  isUsersFetching,\n  toggleFollowOnUserThunk,\n  createDialogThunk,\n  fetchFriendsThunk,\n  fetchSearchedFriendsThunk,\n  clearSearchedUsersState\n}) => {\n  const maxPageItemsCount = 10\n  const { searchInput } = useOutletContext<PeoplePageContextProps>() //PeoplePage\n  const fetchUsers = searchInput.length ? fetchSearchedFriendsThunk : fetchFriendsThunk\n\n  useEffect(() => {\n    window.scrollBy({ behavior: 'smooth', top: -9999999 })\n    clearSearchedUsersState()\n    fetchUsers(maxPageItemsCount, searchInput, true)\n  }, [searchInput, fetchFriendsThunk, clearSearchedUsersState, fetchUsers])\n\n  return <Friends \n    searchInput={searchInput}\n    usersData={searchInput.length ? searchedUsersList : usersList}\n    createDialog={createDialogThunk}\n    isSubscribePending={isSubscribePending}\n    toggleFollowOnUser={toggleFollowOnUserThunk}\n    isUsersFetching={isUsersFetching}\n    maxPageItemsCount={maxPageItemsCount}\n    fetchUsers={fetchUsers}\n  />\n}\n\n/* ------------- Container ------------- */\nconst mapStateToProps = (state: RootState) => {\n  return {\n    usersPage: state.users.users.friends.currentPage,\n    searchedUsersPage: state.users.searchedUsers.friends.currentPage,\n    usersList: state.users.users.friends,\n    searchedUsersList: state.users.searchedUsers.friends,\n    isSubscribePending: state.users.requests.toggleFollowOnUserPending,\n    isUsersFetching: state.users.requests.fetchUsersPending\n  }\n}\n\nconst mapDispatchToProps = {\n  toggleFollowOnUserThunk,\n  createDialogThunk,\n  fetchFriendsThunk,\n  fetchSearchedFriendsThunk,\n  clearSearchedUsersState: clearUsersState\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps)\ntype FriendsContainerProps = ConnectedProps<typeof connector>\n\nexport default compose<any>(connector)(FriendsContainer)\n"],"sourceRoot":""}