{"version":3,"sources":["components/PeopleNav/PeopleNav.module.scss","pages/PeoplePage/PeoplePage.module.scss","components/PeopleNav/PeopleNav.tsx","pages/PeoplePage/PeoplePage.tsx","pages/PeoplePage/PeoplePageContainer.tsx"],"names":["module","exports","PeopleNav","className","cl","usersNav","to","end","isActiveNavLink","usersNavItem","active","PeoplePage","totalUsersCount","searchInput","navigate","isUsersFetching","setSearchInput","searchField","useRef","useEffect","length","current","focus","usersIFollowSection","usersSection","TabsRowBlock","firstTab","secondTab","totalCount","button","disabled","ref","placeholder","type","value","onChange","e","target","context","connector","connect","state","usersList","users","searchedUsersList","searchedUsers","requests","fetchUsersPending","toggleFollowOnUserError","fetchUsersError","compose","withRoute","withAuthenticatedRedirect","route","useState","pathName","location","pathname","isPeople","searchedUsersTotal","people","totalItemsCount","friends","usersTotal","ErrorPopUp","titlesArray"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,SAAW,4BAA4B,aAAe,gCAAgC,OAAS,4B,oBCAjHD,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,aAAe,iCAAiC,YAAc,kC,kJCe/HC,EAZG,WAChB,OACE,sBAAKC,UAAWC,IAAGC,SAAnB,UACE,cAAC,IAAD,CAASC,GAAG,SAASC,KAAG,EAACJ,UAAWK,YAAgBJ,IAAGK,aAAcL,IAAGM,QAAxE,6BACA,cAAC,IAAD,CAASJ,GAAG,aAAaH,UAAWK,YAAgBJ,IAAGK,aAAcL,IAAGM,QAAxE,6BACA,qBAAKP,UAAWC,IAAGK,aAAnB,yBACA,qBAAKN,UAAWC,IAAGK,aAAnB,yBACA,qBAAKN,UAAWC,IAAGK,aAAnB,6B,0BCiDSE,EAxC+B,SAAC,GAMxC,IALLC,EAKI,EALJA,gBACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,eAEMC,EAAcC,iBAAyB,MAE7CC,qBAAU,WAAO,IAAD,GACZJ,GAAqBF,EAAYO,OAAS,IAA5C,UAAmDH,EAAYI,eAA/D,OAAmD,EAAqBC,WACvE,CAACT,EAAaE,IAIjB,OACE,0BAASZ,UAAWC,IAAGmB,oBAAvB,UACE,0BAASpB,UAAWC,IAAGoB,aAAvB,UACE,cAACC,EAAA,EAAD,CACEC,SAAU,CAAC,iBAAkB,qBAC7BC,UAAW,CAAC,UAAW,UACvBC,WAAYhB,EACZiB,OAAQ,CAAC,kBAAMf,EAAS,sBAAsB,qBAEhD,uBACEgB,SAAUf,EACVgB,IAAKd,EACLe,YAAa,wBACb7B,UAAWC,IAAGS,YACdoB,KAAK,OACLC,MAAOrB,EACPsB,SAlBwB,SAACC,GAAD,OAA4CpB,EAAeoB,EAAEC,OAAOH,UAoB9F,cAAC,IAAD,CAAQI,QAAS,CAACzB,iBAhBpB,OAkBA,cAAC,EAAD,QCFA0B,EAAYC,aAZM,SAACC,GACvB,MAAO,CACLC,UAAWD,EAAME,MAAMA,MACvBC,kBAAmBH,EAAME,MAAME,cAC/B9B,gBAAiB0B,EAAME,MAAMG,SAASC,kBACtCC,wBAAyBP,EAAME,MAAMG,SAASE,wBAC9CC,gBAAiBR,EAAME,MAAMG,SAASG,mBAIf,IAKZC,4BAAaX,EAAWY,IAAWC,IAAnCF,EA9CgE,SAAC,GAOzE,IANLG,EAMI,EANJA,MACAX,EAKI,EALJA,UACAE,EAII,EAJJA,kBACA7B,EAGI,EAHJA,gBACAkC,EAEI,EAFJA,gBACAD,EACI,EADJA,wBAEA,EAAsCM,mBAAS,IAA/C,mBAAOzC,EAAP,KAAoBG,EAApB,KAE4BuC,EAAuBF,EAA5CG,SAAWC,SAAqB3C,EAAYuC,EAAZvC,SACjC4C,EAAwB,sBAAbH,EACXI,EAAqBD,EAAWd,EAAkBgB,OAAOC,gBAAkBjB,EAAkBkB,QAAQD,gBACrGE,EAAaL,EAAWhB,EAAUkB,OAAOC,gBAAkBnB,EAAUoB,QAAQD,gBAC7EjD,EAAkBC,EAAc8C,EAAqBI,EAE3D,OACE,qCACE,cAACC,EAAA,EAAD,CAAYC,YAAa,CAACjB,EAAyBC,KACnD,cAAC,EAAD,CACEpC,YAAaA,EACbE,gBAAiBA,EACjBH,gBAAiBA,EACjBE,SAAUA,EACVE,eAAgBA","file":"static/js/6.92d15ed8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersNav\":\"PeopleNav_usersNav__16HSQ\",\"usersNavItem\":\"PeopleNav_usersNavItem__3IZXv\",\"active\":\"PeopleNav_active__1sK3W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersIFollowSection\":\"PeoplePage_usersIFollowSection__2IoaL\",\"usersSection\":\"PeoplePage_usersSection__IR3SL\",\"searchInput\":\"PeoplePage_searchInput__1yDDJ\"};","import { NavLink } from 'react-router-dom'\nimport { isActiveNavLink } from '../../helpers/helpers'\nimport cl from './PeopleNav.module.scss'\n\nconst PeopleNav = () => {\n  return (\n    <nav className={cl.usersNav}>\n      <NavLink to=\"/users\" end className={isActiveNavLink(cl.usersNavItem, cl.active)} >People I follow</NavLink>\n      <NavLink to=\"all-people\" className={isActiveNavLink(cl.usersNavItem, cl.active)} >Find Developers</NavLink>\n      <div className={cl.usersNavItem}>Placeholder</div>\n      <div className={cl.usersNavItem}>Placeholder</div>\n      <div className={cl.usersNavItem}>Placeholder</div>\n    </nav>\n  )\n}\n\nexport default PeopleNav","import React, { useEffect, useRef } from 'react'\nimport { Outlet } from 'react-router-dom'\nimport PeopleNav from '../../components/PeopleNav/PeopleNav'\nimport TabsRowBlock from '../../components/TabsRowBlock/TabsRowBlock'\nimport cl from './PeoplePage.module.scss'\n\n/* ------------- Types ------------- */\ninterface PeoplePageProps {\n  totalUsersCount: number\n  searchInput: string\n  isUsersFetching: boolean\n  navigate: (link: string) => void\n  setSearchInput: (searchInput: string) => void\n}\n\nexport interface PeoplePageContextProps {\n  searchInput: string\n}\n\n/* ------------- Component ------------- */\nconst PeoplePage: React.FC<PeoplePageProps> = ({\n  totalUsersCount,\n  searchInput,\n  navigate,\n  isUsersFetching,\n  setSearchInput,\n}) => {\n  const searchField = useRef<HTMLInputElement>(null)\n\n  useEffect(() => {\n    (!isUsersFetching) && (searchInput.length > 0) && (searchField.current?.focus())\n  }, [searchInput, isUsersFetching])\n\n  const handleSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => setSearchInput(e.target.value)\n\n  return (\n    <section className={cl.usersIFollowSection}>\n      <section className={cl.usersSection}>\n        <TabsRowBlock\n          firstTab={['All developers', '/users/all-people']}\n          secondTab={['Friends', '/users']}\n          totalCount={totalUsersCount}\n          button={[() => navigate('/users/all-people'), 'Find developers']}\n        />\n        <input\n          disabled={isUsersFetching}\n          ref={searchField}\n          placeholder={'Search users I follow'}\n          className={cl.searchInput}\n          type=\"text\"\n          value={searchInput}\n          onChange={handleSearchInputChange}\n        />\n        <Outlet context={{searchInput}}/> {/* PeopleContainer, FriendsContainer */}\n      </section>\n      <PeopleNav />\n    </section>\n  )\n}\n\nexport default PeoplePage\n","import React, { useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { compose } from 'redux';\nimport ErrorPopUp from '../../components/common/ErrorPopUp/ErrorPopUp';\nimport withAuthenticatedRedirect from '../../components/hoc/withAuthRedirect';\nimport { RouteType, withRoute } from '../../components/hoc/withRoute';\nimport { RootState } from '../../redux/store';\nimport PeoplePage from './PeoplePage';\n\n/* ------------- Component ------------- */\nconst PeoplePageContainerApi: React.FC<PeoplePageContainerProps & RouteType> = ({\n  route,\n  usersList,\n  searchedUsersList,\n  isUsersFetching,\n  fetchUsersError,\n  toggleFollowOnUserError\n}) => {\n  const [searchInput, setSearchInput] = useState('')\n\n  const {location: {pathname: pathName}, navigate} = route\n  const isPeople = pathName === '/users/all-people'\n  const searchedUsersTotal = isPeople ? searchedUsersList.people.totalItemsCount : searchedUsersList.friends.totalItemsCount \n  const usersTotal = isPeople ? usersList.people.totalItemsCount : usersList.friends.totalItemsCount\n  const totalUsersCount = searchInput ? searchedUsersTotal : usersTotal\n\n  return (\n    <>\n      <ErrorPopUp titlesArray={[toggleFollowOnUserError, fetchUsersError]}/>\n      <PeoplePage\n        searchInput={searchInput}\n        isUsersFetching={isUsersFetching}\n        totalUsersCount={totalUsersCount}\n        navigate={navigate}\n        setSearchInput={setSearchInput}\n      />\n    </>\n  )\n}\n\n/* ------------- Container ------------- */\nconst mapStateToProps = (state: RootState) => {\n  return {\n    usersList: state.users.users,\n    searchedUsersList: state.users.searchedUsers,\n    isUsersFetching: state.users.requests.fetchUsersPending,\n    toggleFollowOnUserError: state.users.requests.toggleFollowOnUserError,\n    fetchUsersError: state.users.requests.fetchUsersError, \n  }\n} \n\nconst mapDispatchToProps = {}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps)\ntype PeoplePageContainerProps = ConnectedProps<typeof connector>\n\nexport default compose<any>(connector, withRoute, withAuthenticatedRedirect)(PeoplePageContainerApi)"],"sourceRoot":""}