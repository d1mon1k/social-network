{"version":3,"file":"static/js/103.294891bb.chunk.js","mappings":"wKACA,MAAsG,0BAAtG,EAAoM,kCAApM,EAAqP,2B,uCC4DrP,EAvDa,WACX,IAAMA,GAAsBC,EAAAA,EAAAA,QAAuB,MAMnD,OACE,iCACE,mBAAQC,QAAS,YACfC,EAAAA,EAAAA,MAAcC,MAAK,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,OADtC,oBAGA,gBAAKG,UAAWC,EAAhB,UACE,gBAAKC,IAAKV,EAAqBQ,UAAWC,EAA1C,UACE,eAAID,UAAWC","sources":["webpack://react-samurai-way/./src/screens/Chat/Chat.module.scss?aba5","screens/Chat/Chat.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsPage\":\"Chat_dialogsPage__ZbPDX\",\"dialogs\":\"Chat_dialogs__0M9Ku\",\"dialogBlock\":\"Chat_dialogBlock__VZIoO\",\"dialogsWrapper\":\"Chat_dialogsWrapper__cliOw\",\"conversationWrapper\":\"Chat_conversationWrapper__DIlTZ\",\"conversation\":\"Chat_conversation__DHSRN\",\"newMessage\":\"Chat_newMessage__q1vQk\"};","import cl from './Chat.module.scss'\n\nimport { Field, Form } from \"react-final-form\"\nimport { useEffect, useRef } from 'react'\nimport { sendMessage } from '../../api/profile'\n\nconst Chat = () => {\n  const conversationWrapper = useRef<HTMLDivElement>(null)\n\n  // useEffect(() => {\n  //   conversationWrapper.current?.scrollTo(0, 99999)\n  // }, [dialogsPage.messages])\n\n  return (\n    <>\n      <button onClick={() => {\n        sendMessage().then(res=>console.log(res))\n      }}>click</button>\n      <div className={cl.dialogBlock}>\n        <div ref={conversationWrapper} className={cl.conversationWrapper}>\n          <ul className={cl.conversation}></ul>\n        </div>\n        {/* <ReduxForm setMessages={(props.setMessages)} /> */}\n      </div>\n    </>\n  )\n}\n\nconst ReduxForm = (props: {setMessages: (message: string) => {}}) => {\n  const submitHandler = (values: {newMessage: string}) => {\n    // props.setMessages(values.newMessage)\n    values.newMessage = ''\n  }\n\n  const onPressHandler = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      document.getElementById('form')!.dispatchEvent(new Event('submit', { cancelable: true, bubbles: true }))\n      e.preventDefault()\n    }\n  }\n\n  return (\n    <Form\n      onSubmit={submitHandler}\n      render={(props) => {\n        return (\n          <form id=\"form\" onSubmit={props.handleSubmit}>\n            <Field\n              name=\"newMessage\"\n              placeholder=\"Write a message (reduxForm)\"\n              className={cl.newMessage}\n              component=\"textarea\"\n              onKeyPress={onPressHandler}\n            />\n          </form>\n        )\n      }}\n    />\n  )\n}\n\nexport default Chat\n"],"names":["conversationWrapper","useRef","onClick","sendMessage","then","res","console","log","className","cl","ref"],"sourceRoot":""}